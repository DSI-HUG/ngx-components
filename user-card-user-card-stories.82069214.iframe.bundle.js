(self.webpackChunkngx_components_workspace=self.webpackChunkngx_components_workspace||[]).push([[158],{"./projects/core/src/custom-operators.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{RX:()=>subscribeWith,x1:()=>filterMap});var rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),rxjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js"),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js");const filterMap=job=>source$=>source$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.T)((value=>job(value))),(source$=>source$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.p)((v=>void 0!==v)),(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.T)((v=>v))))),subscribeWith=(...others)=>source$=>{const others$=1===(args=others).length&&Array.isArray(args[0])?args[0]:args;var args;return(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.H)(others$).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.U)(),(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.p)((()=>!1)),(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.T)((()=>{})),(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.X)(source$))}},"./projects/user-card/src/user-card.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>NgxUserCardComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),user_card_componentngResource=__webpack_require__("./projects/user-card/src/user-card.component.scss?ngResource"),user_card_componentngResource_default=__webpack_require__.n(user_card_componentngResource);var coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs");const greenBadgeFamily=["Médico-technique","Social","Médico-thérapeutique","Pharmacie"],blueBadgeFamily=["Soins","Infirmier-e"],redBadgeFamily=["Médecin dentiste","Médecin"];let NgxUserCardComponent=class NgxUserCardComponent{user;userCard;_expanded=!0;set expanded(value){this._expanded=(0,coercion.he)(value)}get expanded(){return this._expanded}ngOnChanges(changes){changes.user&&(this.userCard=this.buildDisplayableUserCard(this.user))}buildDisplayableUserCard(user){return{fullname:this.getFullName(user),initials:user.initials,function:this.getFunction(user).toLocaleLowerCase(),specialty:this.getSpecialty(user),badgeColor:this.getBadgeColor(user.familyCode),service:user.esoN3Label,type:user.type,phoneNumber:this.formatPhone(user.phone),mobileNumber:this.formatPhone(user.bip||user.mobile),email:user.email?.toLowerCase(),address:this.getUserAddress(user)}}getUserAddress(user){if(user.organisation||user.address||user.zipCode||user.city){let address="";return user.organisation&&(address+=`${user.organisation} <br>`),user.address&&(address+=`${user.address} <br>`),user.zipCode&&(address+=`${user.zipCode} `),user.city&&(address+=`${user.city}`),address}}getBadgeColor(familyCode){if(familyCode)return greenBadgeFamily.includes(familyCode)?"green":blueBadgeFamily.includes(familyCode)?"blue":redBadgeFamily.includes(familyCode)?"red":"grey"}getSpecialty(user){return this.isValidSpecialty(user.specialty1)||this.isValidSpecialty(user.specialty2)?[user.specialty1,user.specialty2].filter((s=>this.isValidSpecialty(s))).join(", "):user.speciality?.trim()?user.speciality:void 0}isValidSpecialty(specialty){const s=specialty?.trim();return!!s&&"-"!==s&&"null"!==s}getFunction(user){return user.groupFunctionLabel?`${user.groupFunctionLabel}`:`${user.functionSefName?user.functionSefName:""} ${user.functionSefCode?`(${user.functionSefCode})`:""} ${user.role?`/ ${user.role}`:""}`}getShortTitle(title){switch(title?.toLowerCase().trim()){case"monsieur":return"M.";case"madame":return"Mme.";case"docteur":return"Dr.";case"docteure":return"Dre.";case"professeur":return"Pr.";case"professeure":return"Pre.";default:return title||""}}getFullName(user){return`${this.getShortTitle(user.title)} ${user.firstname||""} ${user.lastname||""}`}formatPhone(rawNumber){return 10===rawNumber?.length&&rawNumber.startsWith("0")?rawNumber.replace(/^(\d{3})(\d{3})(\d{2})(\d{2})$/,"$1 $2 $3 $4"):12===rawNumber?.length&&rawNumber.startsWith("+")||13===rawNumber?.length&&rawNumber.startsWith("00")?rawNumber.replace(/^(\+|0{2})(\d{2})(\d{2})(\d{3})(\d{2})(\d{2})$/,"$1$2 $3 $4 $5 $6"):rawNumber}static propDecorators={user:[{type:core.Input}],expanded:[{type:core.Input}],ngOnChanges:[{type:core.Input}]}};NgxUserCardComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngx-user-card",template:'<div class="ngx-user-card-header">\n    @if (userCard.badgeColor; as badgeColor) {\n        <span class="header-badge" [ngClass]="badgeColor + \'-badge\'"></span>\n    }\n    <div class="header-infos">\n        <div class="header-fullname">\n            {{ userCard.fullname }}\n            @if (userCard.initials; as initials) {\n                <span class="header-initials">\n                    {{ \' - \' + initials }}\n                </span>\n            }\n        </div>\n        <div class="header-function">\n            {{ userCard.function }}{{ userCard.specialty ? \' - \' + userCard.specialty : \'\' }}\n        </div>\n    </div>\n</div>\n@if (expanded) {\n    <div class="ngx-user-card-wrapper">\n        <hr />\n        <div class="ngx-user-card-content">\n            <div class="content-service">\n                <div class="label">Service</div>\n                <div class="value">{{ userCard.service ?? \'-\' }}</div>\n            </div>\n            <div class="content-type">\n                <div class="label">Type</div>\n                <div class="value">{{ userCard.type ?? \'-\' }}</div>\n            </div>\n            <div class="content-phone">\n                <div class="label">Téléphone</div>\n                <div class="value">{{ userCard.phoneNumber ?? \'-\' }}</div>\n            </div>\n            <div class="content-mobile">\n                <div class="label">Mobile</div>\n                <div class="value">{{ userCard.mobileNumber ?? \'-\' }}</div>\n            </div>\n            <div class="content-email">\n                <div class="label">Email</div>\n                <div class="value">{{ userCard.email ?? \'-\' }}</div>\n            </div>\n            <div class="content-address">\n                <div class="label">Adresse</div>\n                <div class="value" [innerHTML]="userCard.address ?? \'-\'"></div>\n            </div>\n        </div>\n    </div>\n}\n',changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.None,imports:[common.NgClass,icon.An],styles:[user_card_componentngResource_default()]})],NgxUserCardComponent)},"./projects/story-book/src/user-card/user-card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>user_card_stories,dynamicBadgeColor:()=>dynamicBadgeColor,notExpandedUserCard:()=>notExpandedUserCard,standard:()=>standard,userAbbreviationTitle:()=>userAbbreviationTitle,userTooltip:()=>userTooltip,userWithMissingInfo:()=>userWithMissingInfo});var button_toggle=__webpack_require__("./node_modules/@angular/material/fesm2022/button-toggle.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),user_card_component=__webpack_require__("./projects/user-card/src/user-card.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var user_tooltip_wrapper_componentngResource=__webpack_require__("./projects/story-book/src/user-card/user-tooltip-wrapper/user-tooltip-wrapper.component.scss?ngResource"),user_tooltip_wrapper_componentngResource_default=__webpack_require__.n(user_tooltip_wrapper_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),chips=__webpack_require__("./node_modules/@angular/material/fesm2022/chips.mjs"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js"),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");let NgxTooltipDirective=class NgxTooltipDirective{delay=300;openTooltip$;elementRef=(0,core.inject)(core.ElementRef);destroyRef=(0,core.inject)(core.DestroyRef);constructor(){const triggerElement=this.elementRef.nativeElement,docEl=triggerElement.ownerDocument;if(!docEl.head.querySelector("style[data-tooltip]")){const styleEl=docEl.createElement("style");styleEl.setAttribute("data-tooltip",""),styleEl.textContent=".ngx-tooltip-opening {\n                opacity: 0;\n                visibility: hidden;\n                transition: opacity 200ms linear;\n            }\n            .ngx-tooltip-opening.ngx-tooltip-opened {\n                opacity: 1;\n                visibility: visible;\n            }",docEl.head.appendChild(styleEl)}const leave$=(0,fromEvent.R)(triggerElement,"mouseleave");(0,fromEvent.R)(triggerElement,"mouseenter").pipe((0,switchMap.n)((()=>(0,timer.O)(this.delay).pipe((0,take.s)(1),(0,switchMap.n)((()=>this.openTooltip$?this.openTooltip$(triggerElement):(0,of.of)(void 0))),(0,takeUntil.Q)(leave$)))),(0,rxjs_interop.pQ)(this.destroyRef)).subscribe()}static ctorParameters=()=>[];static propDecorators={delay:[{type:core.Input,args:["ngx-tooltip-delay"]}],openTooltip$:[{type:core.Input,args:["ngx-tooltip"]}]}};NgxTooltipDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[ngx-tooltip]",standalone:!0})],NgxTooltipDirective);var dialog=__webpack_require__("./node_modules/@angular/material/fesm2022/dialog.mjs"),custom_operators=__webpack_require__("./projects/core/src/custom-operators.ts"),_Stack=__webpack_require__("./node_modules/lodash-es/_Stack.js"),_baseAssignValue=__webpack_require__("./node_modules/lodash-es/_baseAssignValue.js"),eq=__webpack_require__("./node_modules/lodash-es/eq.js");const _assignMergeValue=function assignMergeValue(object,key,value){(void 0!==value&&!(0,eq.A)(object[key],value)||void 0===value&&!(key in object))&&(0,_baseAssignValue.A)(object,key,value)};const _baseFor=function createBaseFor(fromRight){return function(object,iteratee,keysFunc){for(var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;length--;){var key=props[fromRight?length:++index];if(!1===iteratee(iterable[key],key,iterable))break}return object}}();var _cloneBuffer=__webpack_require__("./node_modules/lodash-es/_cloneBuffer.js"),_cloneTypedArray=__webpack_require__("./node_modules/lodash-es/_cloneTypedArray.js"),_copyArray=__webpack_require__("./node_modules/lodash-es/_copyArray.js"),_initCloneObject=__webpack_require__("./node_modules/lodash-es/_initCloneObject.js"),isArguments=__webpack_require__("./node_modules/lodash-es/isArguments.js"),isArray=__webpack_require__("./node_modules/lodash-es/isArray.js"),isArrayLike=__webpack_require__("./node_modules/lodash-es/isArrayLike.js"),isObjectLike=__webpack_require__("./node_modules/lodash-es/isObjectLike.js");const lodash_es_isArrayLikeObject=function isArrayLikeObject(value){return(0,isObjectLike.A)(value)&&(0,isArrayLike.A)(value)};var isBuffer=__webpack_require__("./node_modules/lodash-es/isBuffer.js"),isFunction=__webpack_require__("./node_modules/lodash-es/isFunction.js"),isObject=__webpack_require__("./node_modules/lodash-es/isObject.js"),_baseGetTag=__webpack_require__("./node_modules/lodash-es/_baseGetTag.js"),_getPrototype=__webpack_require__("./node_modules/lodash-es/_getPrototype.js"),funcProto=Function.prototype,objectProto=Object.prototype,funcToString=funcProto.toString,isPlainObject_hasOwnProperty=objectProto.hasOwnProperty,objectCtorString=funcToString.call(Object);const lodash_es_isPlainObject=function isPlainObject(value){if(!(0,isObjectLike.A)(value)||"[object Object]"!=(0,_baseGetTag.A)(value))return!1;var proto=(0,_getPrototype.A)(value);if(null===proto)return!0;var Ctor=isPlainObject_hasOwnProperty.call(proto,"constructor")&&proto.constructor;return"function"==typeof Ctor&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString};var isTypedArray=__webpack_require__("./node_modules/lodash-es/isTypedArray.js");const _safeGet=function safeGet(object,key){if(("constructor"!==key||"function"!=typeof object[key])&&"__proto__"!=key)return object[key]};var _copyObject=__webpack_require__("./node_modules/lodash-es/_copyObject.js"),keysIn=__webpack_require__("./node_modules/lodash-es/keysIn.js");const lodash_es_toPlainObject=function toPlainObject(value){return(0,_copyObject.A)(value,(0,keysIn.A)(value))};const _baseMergeDeep=function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=_safeGet(object,key),srcValue=_safeGet(source,key),stacked=stack.get(srcValue);if(stacked)_assignMergeValue(object,key,stacked);else{var newValue=customizer?customizer(objValue,srcValue,key+"",object,source,stack):void 0,isCommon=void 0===newValue;if(isCommon){var isArr=(0,isArray.A)(srcValue),isBuff=!isArr&&(0,isBuffer.A)(srcValue),isTyped=!isArr&&!isBuff&&(0,isTypedArray.A)(srcValue);newValue=srcValue,isArr||isBuff||isTyped?(0,isArray.A)(objValue)?newValue=objValue:lodash_es_isArrayLikeObject(objValue)?newValue=(0,_copyArray.A)(objValue):isBuff?(isCommon=!1,newValue=(0,_cloneBuffer.A)(srcValue,!0)):isTyped?(isCommon=!1,newValue=(0,_cloneTypedArray.A)(srcValue,!0)):newValue=[]:lodash_es_isPlainObject(srcValue)||(0,isArguments.A)(srcValue)?(newValue=objValue,(0,isArguments.A)(objValue)?newValue=lodash_es_toPlainObject(objValue):(0,isObject.A)(objValue)&&!(0,isFunction.A)(objValue)||(newValue=(0,_initCloneObject.A)(srcValue))):isCommon=!1}isCommon&&(stack.set(srcValue,newValue),mergeFunc(newValue,srcValue,srcIndex,customizer,stack),stack.delete(srcValue)),_assignMergeValue(object,key,newValue)}};const _baseMerge=function baseMerge(object,source,srcIndex,customizer,stack){object!==source&&_baseFor(source,(function(srcValue,key){if(stack||(stack=new _Stack.A),(0,isObject.A)(srcValue))_baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);else{var newValue=customizer?customizer(_safeGet(object,key),srcValue,key+"",object,source,stack):void 0;void 0===newValue&&(newValue=srcValue),_assignMergeValue(object,key,newValue)}}),keysIn.A)};const lodash_es_identity=function identity(value){return value};const _apply=function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2])}return func.apply(thisArg,args)};var nativeMax=Math.max;const _overRest=function overRest(func,start,transform){return start=nativeMax(void 0===start?func.length-1:start,0),function(){for(var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);++index<length;)array[index]=args[start+index];index=-1;for(var otherArgs=Array(start+1);++index<start;)otherArgs[index]=args[index];return otherArgs[start]=transform(array),_apply(func,this,otherArgs)}};const lodash_es_constant=function constant(value){return function(){return value}};var _defineProperty=__webpack_require__("./node_modules/lodash-es/_defineProperty.js");const _baseSetToString=_defineProperty.A?function(func,string){return(0,_defineProperty.A)(func,"toString",{configurable:!0,enumerable:!1,value:lodash_es_constant(string),writable:!0})}:lodash_es_identity;var nativeNow=Date.now;const _setToString=function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=16-(stamp-lastCalled);if(lastCalled=stamp,remaining>0){if(++count>=800)return arguments[0]}else count=0;return func.apply(void 0,arguments)}}(_baseSetToString);const _baseRest=function baseRest(func,start){return _setToString(_overRest(func,start,lodash_es_identity),func+"")};var _isIndex=__webpack_require__("./node_modules/lodash-es/_isIndex.js");const _isIterateeCall=function isIterateeCall(value,index,object){if(!(0,isObject.A)(object))return!1;var type=typeof index;return!!("number"==type?(0,isArrayLike.A)(object)&&(0,_isIndex.A)(index,object.length):"string"==type&&index in object)&&(0,eq.A)(object[index],value)};const lodash_es_merge=function createAssigner(assigner){return _baseRest((function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:void 0,guard=length>2?sources[2]:void 0;for(customizer=assigner.length>3&&"function"==typeof customizer?(length--,customizer):void 0,guard&&_isIterateeCall(sources[0],sources[1],guard)&&(customizer=length<3?void 0:customizer,length=1),object=Object(object);++index<length;){var source=sources[index];source&&assigner(object,source,index,customizer)}return object}))}((function(object,source,srcIndex){_baseMerge(object,source,srcIndex)}));var Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),shareReplay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js"),empty=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/empty.js"),mergeWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),filter=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/filter.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js");class NgxTooltipService{tooltipConfig;close$=new Subject.B;positions=[{originX:"center",originY:"bottom",overlayX:"center",overlayY:"top",offsetY:20},{originX:"center",originY:"top",overlayX:"center",overlayY:"bottom",offsetY:-20},{originX:"start",originY:"center",overlayX:"end",overlayY:"center",offsetX:-20},{originX:"end",originY:"center",overlayX:"start",overlayY:"top",offsetX:20},{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top",offsetY:20},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom",offsetY:-20},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top",offsetY:20},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom",offsetY:-20},{originX:"start",originY:"top",overlayX:"start",overlayY:"top"}];dialog=(0,core.inject)(dialog.bZ);constructor(tooltipConfig){this.tooltipConfig=tooltipConfig,this.tooltipConfig||(this.tooltipConfig=new dialog.ru)}open$(triggerElement,tooltipData,tooltipConfig){this.close();const additionalPanelClass=tooltipConfig?.panelClass&&tooltipConfig.panelClass instanceof Array&&tooltipConfig.panelClass||tooltipConfig?.panelClass&&"string"==typeof tooltipConfig?.panelClass&&[tooltipConfig?.panelClass]||new Array,config=lodash_es_merge(tooltipConfig,{hasBackdrop:!1,panelClass:["ngx-tooltip-overlay","no-padding-dialog","ngx-tooltip-opening",...additionalPanelClass]}),dialogRef$=this.openRef$(tooltipData,triggerElement,config).pipe((0,shareReplay.t)({bufferSize:1,refCount:!1})),close$=dialogRef$.pipe((0,switchMap.n)((dialogRef=>{const tooltipElement=dialogRef.componentInstance.elementRef?.nativeElement.parentElement,mouseEnterTrigger$=triggerElement?(0,fromEvent.R)(triggerElement,"mouseenter"):empty.w,mouseEnterTooltip$=tooltipElement?(0,fromEvent.R)(tooltipElement,"mouseenter"):empty.w,mouseLeaveTrigger$=triggerElement?(0,fromEvent.R)(triggerElement,"mouseleave"):empty.w,mouseLeaveTooltip$=tooltipElement?(0,fromEvent.R)(tooltipElement,"mouseleave"):empty.w,set$=mouseEnterTooltip$.pipe((0,mergeWith.X)(mouseEnterTrigger$),(0,map.T)((()=>!1))),reset$=mouseLeaveTooltip$.pipe((0,mergeWith.X)(mouseLeaveTrigger$),(0,map.T)((()=>!0)));return set$.pipe((0,mergeWith.X)(reset$),(0,debounceTime.B)(config.hideDelay||200),(0,filter.p)(Boolean),(0,map.T)((()=>{})))}))).pipe((0,mergeWith.X)(this.close$),(0,withLatestFrom.E)(dialogRef$),(0,tap.M)((([_,dialogRef])=>dialogRef.removePanelClass("ngx-tooltip-opened"))),(0,delay.c)(300),(0,tap.M)((([response,dialogRef])=>dialogRef.close(response))));return dialogRef$.pipe((0,switchMap.n)((dialogRef=>dialogRef.afterClosed())),(0,custom_operators.RX)(close$),(0,shareReplay.t)({bufferSize:1,refCount:!1}))}close(){this.close$.next()}openRef$(tooltipData,triggerElement,tooltipConfig){return this.loadComponent$().pipe((0,take.s)(1),(0,switchMap.n)((component=>{const config=lodash_es_merge({},this.tooltipConfig,tooltipConfig||{});config.data=tooltipData||{},config.minWidth=config.minWidth||"100px";const dialogRef=this.dialog.open(component,config);return dialogRef.afterOpened().pipe((0,map.T)((()=>dialogRef)))})),(0,tap.M)((tooltipRef=>{const componentInstance=tooltipRef.componentInstance,tooltipBounds=componentInstance.elementRef?.nativeElement.parentElement?.getBoundingClientRect(),triggerBounds=triggerElement?.getBoundingClientRect(),bodyBounds=document.body.getBoundingClientRect();tooltipBounds&&triggerBounds?this.positions.find(((position,index)=>{let left=position.offsetX||0;switch(position.originX){case"start":left+=triggerBounds.left;break;case"end":left+=triggerBounds.right;break;default:left+=triggerBounds.left+triggerBounds.width/2}let top=position.offsetY||0;switch(position.originY){case"top":top+=triggerBounds.top;break;case"bottom":top+=triggerBounds.bottom;break;default:top+=triggerBounds.top+triggerBounds.height/2}switch(position.overlayX){case"center":left-=tooltipBounds.width/2;break;case"end":left-=tooltipBounds.width}switch(position.overlayY){case"center":top-=tooltipBounds.height/2;break;case"bottom":top-=tooltipBounds.height}return!(index<this.positions.length-1&&(left<bodyBounds.left||top<bodyBounds.top||left+tooltipBounds.width>bodyBounds.right||top+tooltipBounds.height>bodyBounds.bottom))&&(left+tooltipBounds.width>bodyBounds.right&&(left=bodyBounds.right-tooltipBounds.width),top+tooltipBounds.height>bodyBounds.bottom&&(top=bodyBounds.bottom-tooltipBounds.height),top<bodyBounds.top&&(top=bodyBounds.top),left<bodyBounds.left&&(left=bodyBounds.left),tooltipRef.updatePosition({left:`${left}px`,top:`${top}px`}),tooltipRef.addPanelClass("ngx-tooltip-opened"),!0)})):console.error("A tooltip component must inherits from TooltipComponent directive. Position can't be updated")})))}}var from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");let NgxUserTooltipService=class NgxUserTooltipService extends NgxTooltipService{constructor(){super({width:"auto",minWidth:"16px",panelClass:"no-padding-dialog"})}loadComponent$(){return(0,from.H)(__webpack_require__.e(859).then(__webpack_require__.bind(__webpack_require__,"./projects/user-tooltip/src/user-tooltip.component.ts"))).pipe((0,map.T)((ref=>ref.NgxUserTooltipComponent)))}static ctorParameters=()=>[]};NgxUserTooltipService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],NgxUserTooltipService);let UserTooltipWrapperComponent=class UserTooltipWrapperComponent{user=null;ngxUserTooltipService=(0,core.inject)(NgxUserTooltipService);userTooltip$(user){return element=>this.ngxUserTooltipService.open$(element,user)}static propDecorators={user:[{type:core.Input}]}};UserTooltipWrapperComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"user-tooltip-wrapper[user]",template:'@if (user) {\n    <mat-chip [ngx-tooltip]="userTooltip$(user)">{{ user.initials }}</mat-chip>\n}\n',encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,imports:[chips.Jl,NgxTooltipDirective,fesm2022_forms.YN],styles:[user_tooltip_wrapper_componentngResource_default()]})],UserTooltipWrapperComponent);const user_card_stories={title:"Components/User Card",component:user_card_component.s,tags:["autodocs"],decorators:[(0,dist.moduleMetadata)({imports:[button_toggle.ec,button_toggle.pc]})],parameters:{layout:"centered",docs:{description:{component:"The `NgxUserCardComponent` displays user information. The UserCard can be expanded or compressed, showing or hiding additional details based on the `expanded` input."}}},argTypes:{expanded:{control:"boolean",table:{defaultValue:{summary:"true"},type:{summary:"boolean"}},description:"Set to false to have a compressed UserCard with less information."},user:{control:"object",table:{type:{summary:"NgxUserCard"}},description:"User information object for displaying in the card."}},args:{user:{title:"Docteur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Infirmier-e",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"},expanded:!1}},standard={args:{expanded:!0}},notExpandedUserCard={parameters:{docs:{description:{story:'You can set the "expanded" property to false to have a compressed UserCard with less information.'}}}},dynamicBadgeColor={parameters:{docs:{description:{story:'Depending on the user\'s "familyCode" property given, the UserCard can have a green, blue, red or gray colored badge.<br /><ul><li>Green : <code>Médico-technique</code>, <code>Social</code>, <code>Médico-thérapeutique</code>, <code>Pharmacie</code></li><li>Blue : <code>Soins</code>, <code>Infirmier-e</code></li><li>Red : <code>Médecin dentiste</code>, <code>Médecin</code></li><li>Gray : Any other text</li><li>Nothing : Empty familyCode</li></ul>'}}},render:args=>({props:{...args,familyCodeChanged(code){this.user={title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:code,functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},template:'\n        <section>\n          <ngx-user-card [user]="user" [expanded]="false"></ngx-user-card>\n          <br/>\n          <div class="matButtonContainer">\n            <mat-button-toggle-group name="familyCode" (change)="familyCodeChanged($event.value)" [value]="user.familyCode">\n                <mat-button-toggle value="Social">Social</mat-button-toggle>\n                <mat-button-toggle value="Infirmier-e">Infirmier-e</mat-button-toggle>\n                <mat-button-toggle value="Médecin dentiste">Médecin dentiste</mat-button-toggle>\n                <mat-button-toggle value="a text">Custom text</mat-button-toggle>\n                <mat-button-toggle value="">Empty</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      '}),args:{user:{title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Social",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},userAbbreviationTitle={parameters:{docs:{description:{story:'Depending on the user\'s "title" property given, the UserCard will display its abbreviation.<br /><ul><li>Docteur / Docteure : <code>Dr</code>, <code>Dre</code></li><li>Monsieur / Madame : <code>M</code>, <code>Mme</code></li><li>Professeur / Professeure : <code>Pr</code>, <code>Pre</code></li></ul>Any other text in the "title" property will be displayed entirely.'}}},render:args=>({props:{...args,titleChanged(code){this.user={title:code,firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Soins",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},template:'\n        <section>\n          <ngx-user-card [user]="user" [expanded]="false"></ngx-user-card>\n          <br />\n          <div class="matButtonContainer">\n            <mat-button-toggle-group name="title" (change)="titleChanged($event.value)" [value]="user.title">\n                <mat-button-toggle value="Docteur">Docteur</mat-button-toggle>\n                <mat-button-toggle value="Docteure">Docteure</mat-button-toggle>\n                <mat-button-toggle value="Monsieur">Monsieur</mat-button-toggle>\n                <mat-button-toggle value="Madame">Madame</mat-button-toggle>\n                <mat-button-toggle value="Professeur">Professeur</mat-button-toggle>\n                <mat-button-toggle value="Professeure">Professeure</mat-button-toggle>\n                <mat-button-toggle value="OtherTitle">OtherTitle</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      '}),args:{user:{title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Infirmier-e",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},userWithMissingInfo={parameters:{docs:{description:{story:"Displays the component when certain user information is missing. This helps ensure that the rendering remains consistent even with incomplete data."}}},args:{user:{title:"Professor",firstname:"Jean",lastname:"PATATE",initials:"jpat",email:"jean.patate@hug.ch"},expanded:!0}},userTooltip={decorators:[(0,dist.moduleMetadata)({imports:[UserTooltipWrapperComponent]})],parameters:{docs:{description:{story:"Displays the user card inside a user-tooltip"}}},render:args=>({props:args,template:'<user-tooltip-wrapper [user]="user"></user-tooltip-wrapper>',args:{user:{title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Social",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}})},__namedExportsOrder=["standard","notExpandedUserCard","dynamicBadgeColor","userAbbreviationTitle","userWithMissingInfo","userTooltip"];standard.parameters={...standard.parameters,docs:{...standard.parameters?.docs,source:{originalSource:"{\n  args: {\n    expanded: true\n  }\n}",...standard.parameters?.docs?.source}}},notExpandedUserCard.parameters={...notExpandedUserCard.parameters,docs:{...notExpandedUserCard.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'You can set the \"expanded\" property to false to have a compressed UserCard with less information.'\n      }\n    }\n  }\n}",...notExpandedUserCard.parameters?.docs?.source}}},dynamicBadgeColor.parameters={...dynamicBadgeColor.parameters,docs:{...dynamicBadgeColor.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Depending on the user\\'s \"familyCode\" property given, the UserCard can have a green, blue, red or gray colored badge.<br /><ul><li>Green : <code>Médico-technique</code>, <code>Social</code>, <code>Médico-thérapeutique</code>, <code>Pharmacie</code></li><li>Blue : <code>Soins</code>, <code>Infirmier-e</code></li><li>Red : <code>Médecin dentiste</code>, <code>Médecin</code></li><li>Gray : Any other text</li><li>Nothing : Empty familyCode</li></ul>'\n      }\n    }\n  },\n  render: args => ({\n    props: {\n      ...args,\n      familyCodeChanged(code: string): void {\n        this['user'] = {\n          title: 'Professeur',\n          firstname: 'Jean',\n          lastname: 'PATATE',\n          initials: 'jpat',\n          type: 'Type',\n          email: 'jean.patate@hug.ch',\n          role: 'Medecin',\n          groupFunctionLabel: 'Group',\n          familyCode: code,\n          functionSefName: 'SefNameFunction',\n          functionSefCode: 'SefCodeFunction',\n          organisation: 'HUG',\n          speciality: 'Neurochirurgie',\n          specialty1: 'Dermatologie',\n          specialty2: 'Pedicure',\n          esoN3Label: 'EsoN3Label',\n          login: 'PatateLogin',\n          phone: '+44 150 509 39',\n          bip: '8859595',\n          mobile: '+44 150 509 39',\n          address: 'Carouge, 7 Rue St Julien',\n          city: 'Carouge',\n          zipCode: '1227'\n        };\n      }\n    },\n    template: `\n        <section>\n          <ngx-user-card [user]=\"user\" [expanded]=\"false\"></ngx-user-card>\n          <br/>\n          <div class=\"matButtonContainer\">\n            <mat-button-toggle-group name=\"familyCode\" (change)=\"familyCodeChanged($event.value)\" [value]=\"user.familyCode\">\n                <mat-button-toggle value=\"Social\">Social</mat-button-toggle>\n                <mat-button-toggle value=\"Infirmier-e\">Infirmier-e</mat-button-toggle>\n                <mat-button-toggle value=\"Médecin dentiste\">Médecin dentiste</mat-button-toggle>\n                <mat-button-toggle value=\"a text\">Custom text</mat-button-toggle>\n                <mat-button-toggle value=\"\">Empty</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      `\n  }),\n  args: {\n    user: {\n      title: 'Professeur',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      type: 'Type',\n      email: 'jean.patate@hug.ch',\n      role: 'Medecin',\n      groupFunctionLabel: 'Group',\n      familyCode: 'Social',\n      functionSefName: 'SefNameFunction',\n      functionSefCode: 'SefCodeFunction',\n      organisation: 'HUG',\n      speciality: 'Neurochirurgie',\n      specialty1: 'Dermatologie',\n      specialty2: 'Pedicure',\n      esoN3Label: 'EsoN3Label',\n      login: 'PatateLogin',\n      phone: '+44 150 509 39',\n      bip: '8859595',\n      mobile: '+44 150 509 39',\n      address: 'Carouge, 7 Rue St Julien',\n      city: 'Carouge',\n      zipCode: '1227'\n    }\n  }\n}",...dynamicBadgeColor.parameters?.docs?.source}}},userAbbreviationTitle.parameters={...userAbbreviationTitle.parameters,docs:{...userAbbreviationTitle.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Depending on the user\\'s \"title\" property given, the UserCard will display its abbreviation.<br /><ul><li>Docteur / Docteure : <code>Dr</code>, <code>Dre</code></li><li>Monsieur / Madame : <code>M</code>, <code>Mme</code></li><li>Professeur / Professeure : <code>Pr</code>, <code>Pre</code></li></ul>Any other text in the \"title\" property will be displayed entirely.'\n      }\n    }\n  },\n  render: args => ({\n    props: {\n      ...args,\n      titleChanged(code: string): void {\n        this['user'] = {\n          title: code,\n          firstname: 'Jean',\n          lastname: 'PATATE',\n          initials: 'jpat',\n          type: 'Type',\n          email: 'jean.patate@hug.ch',\n          role: 'Medecin',\n          groupFunctionLabel: 'Group',\n          familyCode: 'Soins',\n          functionSefName: 'SefNameFunction',\n          functionSefCode: 'SefCodeFunction',\n          organisation: 'HUG',\n          speciality: 'Neurochirurgie',\n          specialty1: 'Dermatologie',\n          specialty2: 'Pedicure',\n          esoN3Label: 'EsoN3Label',\n          login: 'PatateLogin',\n          phone: '+44 150 509 39',\n          bip: '8859595',\n          mobile: '+44 150 509 39',\n          address: 'Carouge, 7 Rue St Julien',\n          city: 'Carouge',\n          zipCode: '1227'\n        };\n      }\n    },\n    template: `\n        <section>\n          <ngx-user-card [user]=\"user\" [expanded]=\"false\"></ngx-user-card>\n          <br />\n          <div class=\"matButtonContainer\">\n            <mat-button-toggle-group name=\"title\" (change)=\"titleChanged($event.value)\" [value]=\"user.title\">\n                <mat-button-toggle value=\"Docteur\">Docteur</mat-button-toggle>\n                <mat-button-toggle value=\"Docteure\">Docteure</mat-button-toggle>\n                <mat-button-toggle value=\"Monsieur\">Monsieur</mat-button-toggle>\n                <mat-button-toggle value=\"Madame\">Madame</mat-button-toggle>\n                <mat-button-toggle value=\"Professeur\">Professeur</mat-button-toggle>\n                <mat-button-toggle value=\"Professeure\">Professeure</mat-button-toggle>\n                <mat-button-toggle value=\"OtherTitle\">OtherTitle</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      `\n  }),\n  args: {\n    user: {\n      title: 'Professeur',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      type: 'Type',\n      email: 'jean.patate@hug.ch',\n      role: 'Medecin',\n      groupFunctionLabel: 'Group',\n      familyCode: 'Infirmier-e',\n      functionSefName: 'SefNameFunction',\n      functionSefCode: 'SefCodeFunction',\n      organisation: 'HUG',\n      speciality: 'Neurochirurgie',\n      specialty1: 'Dermatologie',\n      specialty2: 'Pedicure',\n      esoN3Label: 'EsoN3Label',\n      login: 'PatateLogin',\n      phone: '+44 150 509 39',\n      bip: '8859595',\n      mobile: '+44 150 509 39',\n      address: 'Carouge, 7 Rue St Julien',\n      city: 'Carouge',\n      zipCode: '1227'\n    }\n  }\n}",...userAbbreviationTitle.parameters?.docs?.source}}},userWithMissingInfo.parameters={...userWithMissingInfo.parameters,docs:{...userWithMissingInfo.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays the component when certain user information is missing. This helps ensure that the rendering remains consistent even with incomplete data.'\n      }\n    }\n  },\n  args: {\n    user: {\n      title: 'Professor',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      email: 'jean.patate@hug.ch'\n      // Phone number and address are missing\n    },\n    expanded: true\n  }\n}",...userWithMissingInfo.parameters?.docs?.source}}},userTooltip.parameters={...userTooltip.parameters,docs:{...userTooltip.parameters?.docs,source:{originalSource:"{\n  decorators: [moduleMetadata({\n    imports: [UserTooltipWrapperComponent]\n  })],\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays the user card inside a user-tooltip'\n      }\n    }\n  },\n  render: args => ({\n    props: args,\n    template: '<user-tooltip-wrapper [user]=\"user\"></user-tooltip-wrapper>',\n    args: {\n      user: {\n        title: 'Professeur',\n        firstname: 'Jean',\n        lastname: 'PATATE',\n        initials: 'jpat',\n        type: 'Type',\n        email: 'jean.patate@hug.ch',\n        role: 'Medecin',\n        groupFunctionLabel: 'Group',\n        familyCode: 'Social',\n        functionSefName: 'SefNameFunction',\n        functionSefCode: 'SefCodeFunction',\n        organisation: 'HUG',\n        speciality: 'Neurochirurgie',\n        specialty1: 'Dermatologie',\n        specialty2: 'Pedicure',\n        esoN3Label: 'EsoN3Label',\n        login: 'PatateLogin',\n        phone: '+44 150 509 39',\n        bip: '8859595',\n        mobile: '+44 150 509 39',\n        address: 'Carouge, 7 Rue St Julien',\n        city: 'Carouge',\n        zipCode: '1227'\n      }\n    }\n  })\n}",...userTooltip.parameters?.docs?.source}}}},"./projects/story-book/src/user-card/user-tooltip-wrapper/user-tooltip-wrapper.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"mat-chip {\n  cursor: help;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/user-card/src/user-card.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'ngx-user-card {\n  display: block;\n  font-family: "Roboto";\n  border-radius: 8px;\n  width: 350px;\n  padding: 1rem;\n  word-break: break-word;\n}\nngx-user-card > .ngx-user-card-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 400;\n}\nngx-user-card > .ngx-user-card-header.expandable {\n  cursor: pointer;\n}\nngx-user-card > .ngx-user-card-header > .header-badge {\n  display: flex;\n  flex: 0 0 auto;\n  width: 16px;\n  height: 16px;\n  margin: 10px;\n  border-radius: 12px;\n}\nngx-user-card > .ngx-user-card-header > .header-infos {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-fullname {\n  display: flex;\n  align-items: baseline;\n  font-weight: 600;\n  font-size: 1rem;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-fullname > .header-initials {\n  font-size: 12px;\n  margin-left: 5px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-function {\n  font-size: 14px;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-function::first-letter {\n  text-transform: uppercase;\n}\nngx-user-card > .ngx-user-card-header > .header-icon {\n  display: flex;\n  transition: rotate 300ms ease-in-out;\n}\nngx-user-card > .ngx-user-card-header > .header-icon.expanded {\n  rotate: -180deg;\n}\nngx-user-card > .ngx-user-card-wrapper {\n  overflow: hidden;\n}\nngx-user-card hr {\n  border-bottom: 1px;\n  margin: 1rem 0;\n}\nngx-user-card .ngx-user-card-content {\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-template-rows: auto;\n  grid-template-areas: "service type" "phone mobile" "email email" "address address";\n  row-gap: 12px;\n  column-gap: 0.5rem;\n}\nngx-user-card .ngx-user-card-content .label {\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n}\nngx-user-card .ngx-user-card-content .value {\n  line-height: 20px;\n}\nngx-user-card .ngx-user-card-content > .content-type {\n  grid-area: type;\n}\nngx-user-card .ngx-user-card-content > .content-service {\n  grid-area: service;\n}\nngx-user-card .ngx-user-card-content > .content-phone {\n  grid-area: phone;\n}\nngx-user-card .ngx-user-card-content > .content-mobile {\n  grid-area: mobile;\n}\nngx-user-card .ngx-user-card-content > .content-email {\n  grid-area: email;\n}\nngx-user-card .ngx-user-card-content > .content-address {\n  grid-area: address;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);