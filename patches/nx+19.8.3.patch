diff --git a/node_modules/nx/src/command-line/migrate/migrate.js b/node_modules/nx/src/command-line/migrate/migrate.js
index 2334703..1c1bb6c 100644
--- a/node_modules/nx/src/command-line/migrate/migrate.js
+++ b/node_modules/nx/src/command-line/migrate/migrate.js
@@ -102,14 +102,14 @@ class Migrator {
                 return [];
             return Object.entries(generators)
                 .filter(([, migration]) => migration.version &&
-                this.gt(migration.version, currentVersion) &&
-                this.lte(migration.version, version) &&
-                this.areMigrationRequirementsMet(packageName, migration))
+                    this.gt(migration.version, currentVersion) &&
+                    this.lte(migration.version, version) &&
+                    this.areMigrationRequirementsMet(packageName, migration))
                 .map(([migrationName, migration]) => ({
-                ...migration,
-                package: packageName,
-                name: migrationName,
-            }));
+                    ...migration,
+                    package: packageName,
+                    name: migrationName,
+                }));
         }));
         return migrations.flat();
     }
@@ -178,7 +178,7 @@ class Migrator {
             .filter((pkgs) => pkgs.length)
             .flat()
             .sort((pkgUpdate1, pkgUpdate2) => packageGroupOrder.indexOf(pkgUpdate1.package) -
-            packageGroupOrder.indexOf(pkgUpdate2.package));
+                packageGroupOrder.indexOf(pkgUpdate2.package));
     }
     getPackageJsonUpdatesFromMigrationConfig(packageName, targetVersion, migrationConfig) {
         const packageGroupOrder = this.getPackageJsonUpdatesFromPackageGroup(packageName, targetVersion, migrationConfig);
@@ -528,24 +528,24 @@ function createFetcher() {
         const cacheKey = packageName + '-' + packageVersion;
         return Promise.resolve(resolvedVersionCache[cacheKey])
             .then((cachedResolvedVersion) => {
-            if (cachedResolvedVersion) {
-                return cachedResolvedVersion;
-            }
-            resolvedVersionCache[cacheKey] = (0, package_manager_1.resolvePackageVersionUsingRegistry)(packageName, packageVersion);
-            return resolvedVersionCache[cacheKey];
-        })
+                if (cachedResolvedVersion) {
+                    return cachedResolvedVersion;
+                }
+                resolvedVersionCache[cacheKey] = (0, package_manager_1.resolvePackageVersionUsingRegistry)(packageName, packageVersion);
+                return resolvedVersionCache[cacheKey];
+            })
             .then((resolvedVersion) => {
-            if (resolvedVersion !== packageVersion &&
-                migrationsCache[`${packageName}-${resolvedVersion}`]) {
-                return migrationsCache[`${packageName}-${resolvedVersion}`];
-            }
-            setCache(packageName, resolvedVersion);
-            return getPackageMigrationsUsingRegistry(packageName, resolvedVersion);
-        })
+                if (resolvedVersion !== packageVersion &&
+                    migrationsCache[`${packageName}-${resolvedVersion}`]) {
+                    return migrationsCache[`${packageName}-${resolvedVersion}`];
+                }
+                setCache(packageName, resolvedVersion);
+                return getPackageMigrationsUsingRegistry(packageName, resolvedVersion);
+            })
             .catch(() => {
-            logger_1.logger.info(`Fetching ${packageName}@${packageVersion}`);
-            return getPackageMigrationsUsingInstall(packageName, packageVersion);
-        });
+                logger_1.logger.info(`Fetching ${packageName}@${packageVersion}`);
+                return getPackageMigrationsUsingInstall(packageName, packageVersion);
+            });
     }
     return function nxMigrateFetcher(packageName, packageVersion) {
         if (migrationsCache[`${packageName}-${packageVersion}`]) {
@@ -881,7 +881,7 @@ function runInstall() {
     const pmCommands = (0, package_manager_1.getPackageManagerCommand)();
     // TODO: remove this
     if ((0, package_manager_1.detectPackageManager)() === 'npm') {
-        process.env.npm_config_legacy_peer_deps ??= 'true';
+        // process.env.npm_config_legacy_peer_deps ??= 'true';
     }
     output_1.output.log({
         title: `Running '${pmCommands.install}' to make sure necessary packages are installed`,
diff --git a/node_modules/nx/src/command-line/release/changelog.js b/node_modules/nx/src/command-line/release/changelog.js
index 5f462f8..88fdcc4 100644
--- a/node_modules/nx/src/command-line/release/changelog.js
+++ b/node_modules/nx/src/command-line/release/changelog.js
@@ -355,6 +355,7 @@ function createAPI(overrideReleaseConfig) {
                         }
                         if (!commits) {
                             commits = await getCommits(fromRef, toSHA);
+                            commits = commits.filter((c) => c.affectedFiles.find((f) => f.startsWith(project.data.root)));
                         }
                         const { fileMap } = await (0, file_map_utils_1.createFileMapUsingProjectGraph)(projectGraph);
                         const fileToProjectMap = createFileToProjectMap(fileMap.projectFileMap);
diff --git a/node_modules/nx/src/command-line/release/utils/git.js b/node_modules/nx/src/command-line/release/utils/git.js
index 383d50f..3dd2b80 100644
--- a/node_modules/nx/src/command-line/release/utils/git.js
+++ b/node_modules/nx/src/command-line/release/utils/git.js
@@ -319,7 +319,8 @@ function getAllAuthorsForCommit(commit) {
 }
 // https://www.conventionalcommits.org/en/v1.0.0/
 // https://regex101.com/r/FSfNvA/1
-const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+// const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.*)\))?(?<breaking>!)?: (?<description>.+)/i;
 const CoAuthoredByRegex = /co-authored-by:\s*(?<name>.+)(<(?<email>.+)>)/gim;
 const PullRequestRE = /\([ a-z]*(#\d+)\s*\)/gm;
 const IssueRE = /(#\d+)/gm;
diff --git a/node_modules/nx/src/command-line/release/utils/shared.js b/node_modules/nx/src/command-line/release/utils/shared.js
index 0cfae24..7ba3b15 100644
--- a/node_modules/nx/src/command-line/release/utils/shared.js
+++ b/node_modules/nx/src/command-line/release/utils/shared.js
@@ -213,7 +213,8 @@ async function getCommitsRelevantToProjects(projectGraph, commits, projects) {
      * - touch project files which are contained within the list of projects directly
      * - touch non-project files and the commit is not scoped
      */
-    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
-        (!c.scope &&
-            fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    // return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
+    //     (!c.scope &&
+    //         fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f)));
 }
diff --git a/node_modules/nx/src/generators/utils/json.js b/node_modules/nx/src/generators/utils/json.js
index a59bc2c..a8387f4 100644
--- a/node_modules/nx/src/generators/utils/json.js
+++ b/node_modules/nx/src/generators/utils/json.js
@@ -3,6 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.readJson = readJson;
 exports.writeJson = writeJson;
 exports.updateJson = updateJson;
+let detectIndent_1;
+(async () => detectIndent_1 = ((await import('detect-indent')).default))();
 const json_1 = require("../../utils/json");
 /**
  * Reads a json file, removes all comments and parses JSON.
@@ -31,7 +33,9 @@ function readJson(tree, path, options) {
  * @param options Optional JSON Serialize Options
  */
 function writeJson(tree, path, value, options) {
-    const serialized = (0, json_1.serializeJson)(value, options);
+    // const serialized = (0, json_1.serializeJson)(value, options);
+    const indent = options?.indent ?? detectIndent_1(tree.read(path, 'utf-8')).indent;
+    const serialized = (0, json_1.serializeJson)(value, { ...options, indent });
     tree.write(path, `${serialized}\n`);
 }
 /**
diff --git a/node_modules/nx/src/utils/json.js b/node_modules/nx/src/utils/json.js
index 2ace40e..c415390 100644
--- a/node_modules/nx/src/utils/json.js
+++ b/node_modules/nx/src/utils/json.js
@@ -58,5 +58,6 @@ function formatParseError(input, parseError) {
  * @returns the formatted JSON representation of the object
  */
 function serializeJson(input, options) {
-    return JSON.stringify(input, null, options?.spaces ?? 2);
+    // return JSON.stringify(input, null, options?.spaces ?? 2);
+    return JSON.stringify(input, null, options?.indent ?? 2);
 }
diff --git a/node_modules/nx/src/utils/package-manager.js b/node_modules/nx/src/utils/package-manager.js
index a8ef2b8..1c3d8b5 100644
--- a/node_modules/nx/src/utils/package-manager.js
+++ b/node_modules/nx/src/utils/package-manager.js
@@ -132,10 +132,10 @@ function getPackageManagerCommand(packageManager = detectPackageManager(), root
         },
         npm: () => {
             // TODO: Remove this
-            process.env.npm_config_legacy_peer_deps ??= 'true';
+            // process.env.npm_config_legacy_peer_deps ??= 'true';
             return {
                 install: 'npm install',
-                ciInstall: 'npm ci --legacy-peer-deps',
+                ciInstall: 'npm ci', // --legacy-peer-deps',
                 updateLockFile: 'npm install --package-lock-only',
                 add: 'npm install',
                 addDev: 'npm install -D',
