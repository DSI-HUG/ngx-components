diff --git a/node_modules/nx/src/command-line/release/changelog.js b/node_modules/nx/src/command-line/release/changelog.js
index 13e2e34..5dc0610 100644
--- a/node_modules/nx/src/command-line/release/changelog.js
+++ b/node_modules/nx/src/command-line/release/changelog.js
@@ -310,6 +310,7 @@ async function releaseChangelog(args) {
                     }
                     if (!commits) {
                         commits = await getCommits(fromRef, toSHA);
+                        commits = commits.filter((c) => c.affectedFiles.find((f) => f.startsWith(project.data.root)));
                     }
                     const { fileMap } = await (0, file_map_utils_1.createFileMapUsingProjectGraph)(projectGraph);
                     const fileToProjectMap = createFileToProjectMap(fileMap.projectFileMap);
diff --git a/node_modules/nx/src/command-line/release/utils/git.js b/node_modules/nx/src/command-line/release/utils/git.js
index c5c7d90..bb882ad 100644
--- a/node_modules/nx/src/command-line/release/utils/git.js
+++ b/node_modules/nx/src/command-line/release/utils/git.js
@@ -281,7 +281,8 @@ function parseConventionalCommitsMessage(message) {
 exports.parseConventionalCommitsMessage = parseConventionalCommitsMessage;
 // https://www.conventionalcommits.org/en/v1.0.0/
 // https://regex101.com/r/FSfNvA/1
-const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+// const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.*)\))?(?<breaking>!)?: (?<description>.+)/i;
 const CoAuthoredByRegex = /co-authored-by:\s*(?<name>.+)(<(?<email>.+)>)/gim;
 const PullRequestRE = /\([ a-z]*(#\d+)\s*\)/gm;
 const IssueRE = /(#\d+)/gm;
diff --git a/node_modules/nx/src/command-line/release/utils/shared.js b/node_modules/nx/src/command-line/release/utils/shared.js
index e08aff8..de3cdc7 100644
--- a/node_modules/nx/src/command-line/release/utils/shared.js
+++ b/node_modules/nx/src/command-line/release/utils/shared.js
@@ -209,8 +209,9 @@ async function getCommitsRelevantToProjects(projectGraph, commits, projects) {
      * - touch project files which are contained within the list of projects directly
      * - touch non-project files and the commit is not scoped
      */
-    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
-        (!c.scope &&
-            fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    // return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
+    //     (!c.scope &&
+    //         fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f)));
 }
 exports.getCommitsRelevantToProjects = getCommitsRelevantToProjects;
diff --git a/node_modules/nx/src/generators/utils/json.js b/node_modules/nx/src/generators/utils/json.js
index 7db40ce..5e69931 100644
--- a/node_modules/nx/src/generators/utils/json.js
+++ b/node_modules/nx/src/generators/utils/json.js
@@ -1,6 +1,8 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.updateJson = exports.writeJson = exports.readJson = void 0;
+let detectIndent_1;
+(async () => detectIndent_1 = ((await import('detect-indent')).default))();
 const json_1 = require("../../utils/json");
 /**
  * Reads a json file, removes all comments and parses JSON.
@@ -30,7 +32,10 @@ exports.readJson = readJson;
  * @param options Optional JSON Serialize Options
  */
 function writeJson(tree, path, value, options) {
-    const serialized = (0, json_1.serializeJson)(value, options);
+    // const serialized = (0, json_1.serializeJson)(value, options);
+    // tree.write(path, `${serialized}\n`);
+    const indent = options?.indent ?? detectIndent_1(tree.read(path, 'utf-8')).indent;
+    const serialized = (0, json_1.serializeJson)(value, { ...options, indent });
     tree.write(path, `${serialized}\n`);
 }
 exports.writeJson = writeJson;
diff --git a/node_modules/nx/src/utils/json.js b/node_modules/nx/src/utils/json.js
index 9ea1345..7b1be5b 100644
--- a/node_modules/nx/src/utils/json.js
+++ b/node_modules/nx/src/utils/json.js
@@ -57,6 +57,7 @@ function formatParseError(input, parseError) {
  * @returns the formatted JSON representation of the object
  */
 function serializeJson(input, options) {
-    return JSON.stringify(input, null, options?.spaces ?? 2);
+    // return JSON.stringify(input, null, options?.spaces ?? 2);
+    return JSON.stringify(input, null, options?.indent ?? 2);
 }
 exports.serializeJson = serializeJson;
diff --git a/node_modules/nx/src/utils/package-manager.js b/node_modules/nx/src/utils/package-manager.js
index 489874d..630f700 100644
--- a/node_modules/nx/src/utils/package-manager.js
+++ b/node_modules/nx/src/utils/package-manager.js
@@ -126,7 +126,7 @@ function getPackageManagerCommand(packageManager = detectPackageManager(), root
             return {
                 install: 'npm install',
                 ciInstall: 'npm ci',
-                updateLockFile: 'npm install --package-lock-only',
+                updateLockFile: 'npm install',
                 add: 'npm install',
                 addDev: 'npm install -D',
                 rm: 'npm rm',
