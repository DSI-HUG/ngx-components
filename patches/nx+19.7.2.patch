diff --git a/node_modules/nx/src/command-line/release/changelog.js b/node_modules/nx/src/command-line/release/changelog.js
index d3768da..b4b9658 100644
--- a/node_modules/nx/src/command-line/release/changelog.js
+++ b/node_modules/nx/src/command-line/release/changelog.js
@@ -354,6 +354,7 @@ function createAPI(overrideReleaseConfig) {
                         }
                         if (!commits) {
                             commits = await getCommits(fromRef, toSHA);
+                            commits = commits.filter((c) => c.affectedFiles.find((f) => f.startsWith(project.data.root)));
                         }
                         const { fileMap } = await (0, file_map_utils_1.createFileMapUsingProjectGraph)(projectGraph);
                         const fileToProjectMap = createFileToProjectMap(fileMap.projectFileMap);
diff --git a/node_modules/nx/src/command-line/release/utils/git.js b/node_modules/nx/src/command-line/release/utils/git.js
index 8eb2464..4aae4f4 100644
--- a/node_modules/nx/src/command-line/release/utils/git.js
+++ b/node_modules/nx/src/command-line/release/utils/git.js
@@ -309,7 +309,8 @@ function getAllAuthorsForCommit(commit) {
 }
 // https://www.conventionalcommits.org/en/v1.0.0/
 // https://regex101.com/r/FSfNvA/1
-const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+// const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.+)\))?(?<breaking>!)?: (?<description>.+)/i;
+const ConventionalCommitRegex = /(?<type>[a-z]+)(\((?<scope>.*)\))?(?<breaking>!)?: (?<description>.+)/i;
 const CoAuthoredByRegex = /co-authored-by:\s*(?<name>.+)(<(?<email>.+)>)/gim;
 const PullRequestRE = /\([ a-z]*(#\d+)\s*\)/gm;
 const IssueRE = /(#\d+)/gm;
diff --git a/node_modules/nx/src/command-line/release/utils/shared.js b/node_modules/nx/src/command-line/release/utils/shared.js
index 0cfae24..7ba3b15 100644
--- a/node_modules/nx/src/command-line/release/utils/shared.js
+++ b/node_modules/nx/src/command-line/release/utils/shared.js
@@ -213,7 +213,8 @@ async function getCommitsRelevantToProjects(projectGraph, commits, projects) {
      * - touch project files which are contained within the list of projects directly
      * - touch non-project files and the commit is not scoped
      */
-    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
-        (!c.scope &&
-            fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    // return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f) ||
+    //     (!c.scope &&
+    //         fileMap.nonProjectFiles.some((nonProjectFile) => nonProjectFile.file === f))));
+    return commits.filter((c) => c.affectedFiles.some((f) => filesInReleaseGroup.has(f)));
 }
diff --git a/node_modules/nx/src/generators/utils/json.js b/node_modules/nx/src/generators/utils/json.js
index a59bc2c..a8387f4 100644
--- a/node_modules/nx/src/generators/utils/json.js
+++ b/node_modules/nx/src/generators/utils/json.js
@@ -3,6 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.readJson = readJson;
 exports.writeJson = writeJson;
 exports.updateJson = updateJson;
+let detectIndent_1;
+(async () => detectIndent_1 = ((await import('detect-indent')).default))();
 const json_1 = require("../../utils/json");
 /**
  * Reads a json file, removes all comments and parses JSON.
@@ -31,7 +33,9 @@ function readJson(tree, path, options) {
  * @param options Optional JSON Serialize Options
  */
 function writeJson(tree, path, value, options) {
-    const serialized = (0, json_1.serializeJson)(value, options);
+    // const serialized = (0, json_1.serializeJson)(value, options);
+    const indent = options?.indent ?? detectIndent_1(tree.read(path, 'utf-8')).indent;
+    const serialized = (0, json_1.serializeJson)(value, { ...options, indent });
     tree.write(path, `${serialized}\n`);
 }
 /**
diff --git a/node_modules/nx/src/utils/json.js b/node_modules/nx/src/utils/json.js
index 2ace40e..c415390 100644
--- a/node_modules/nx/src/utils/json.js
+++ b/node_modules/nx/src/utils/json.js
@@ -58,5 +58,6 @@ function formatParseError(input, parseError) {
  * @returns the formatted JSON representation of the object
  */
 function serializeJson(input, options) {
-    return JSON.stringify(input, null, options?.spaces ?? 2);
+    // return JSON.stringify(input, null, options?.spaces ?? 2);
+    return JSON.stringify(input, null, options?.indent ?? 2);
 }
