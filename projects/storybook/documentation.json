{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "StorybookLayoutWrapperComponent",
            "id": "component-StorybookLayoutWrapperComponent-c7f9f2c701d2b5651c6757591e0aaceb82b625d9692e477ed5d131b491946c73b5f598467409c9db6d7a0a4867db47c0c384659747f2b6d7c864ec40658efffb",
            "file": "projects/storybook/src/stories/layout/layout-wrapper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-layout-wrapper",
            "styleUrls": ["./layout-wrapper.component.scss"],
            "styles": [],
            "templateUrl": ["./layout-wrapper.component.html"],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ngxStatusService",
                    "defaultValue": "inject(NgxStatusService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [123]
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [124]
                },
                {
                    "name": "withBackButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [124]
                },
                {
                    "name": "withCloseButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [124]
                }
            ],
            "methodsClass": [
                {
                    "name": "log",
                    "args": [
                        {
                            "name": "msg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [124],
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "NgxSearchContainerComponent",
                    "type": "component"
                },
                {
                    "name": "NgxSearchInputDirective",
                    "type": "directive"
                },
                {
                    "name": "NgxLayoutComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgxLayoutComponent } from '../../../../layout/src/layout.component';\nimport { NgxSearchContainerComponent, NgxSearchInputDirective } from '../../../../search-container/src/search-container.component';\nimport { NgxStatusService } from '../../../../status/src/status.service';\n\n@Component({\n    selector: 'storybook-layout-wrapper',\n    templateUrl: './layout-wrapper.component.html',\n    styleUrls: ['./layout-wrapper.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone: true,\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatTooltipModule,\n        MatChipsModule,\n        NgxSearchContainerComponent,\n        NgxSearchInputDirective,\n        NgxLayoutComponent\n    ]\n})\nexport class StorybookLayoutWrapperComponent {\n\n    protected withBackButton = true;\n    protected withCloseButton = true;\n    protected search: string | undefined;\n\n    private ngxStatusService = inject(NgxStatusService);\n\n    protected log(msg: string, event?: Event): void {\n        console.log(msg, event);\n        this.ngxStatusService.showStatus({\n            title: msg,\n            type: 'info'\n        });\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "storybook-layout-wrapper {\n    height: 500px;\n}\n",
                    "styleUrl": "./layout-wrapper.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ngx-layout toolbarColor=\"primary\" [withBackButton]=\"withBackButton\" backButtonLabel=\"Back button label\" [withCloseButton]=\"withCloseButton\" (backButtonClicked)=\"log('Back button clicked', $event)\" (closeButtonClicked)=\"log('Close button clicked', $event)\" (sideFilterOpened)=\"log('Side filter opened')\" (sideFilterClosed)=\"log('Side filter closed')\">\n    <ng-template #layoutToolbar>\n        <span toolbar-title>Acc√®s dossier patient</span>\n        <ngx-search-container>\n            <input type=\"text\" [(ngModel)]=\"search\" (ngModelChange)=\"log('Search changed', $event)\" placeholder=\"Search\" autocomplete=\"off\" ngx-search-input />\n        </ngx-search-container>\n\n        <button type=\"button\" mat-icon-button matTooltip=\"Help\" (click)=\"log('Help button clicked', $event)\">\n            <mat-icon>help_outline</mat-icon>\n        </button>\n    </ng-template>\n\n    <!-- Primary action -->\n    <ng-template #layoutPrimaryAction>\n        <button type=\"button\" mat-fab matTooltip=\"Add\" (click)=\"log('Add button clicked', $event)\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </ng-template>\n\n    <!-- Actions panel -->\n    <ng-template #layoutActions>\n        <button type=\"button\" mat-icon-button matTooltip=\"Refresh\" (click)=\"log('Refresh button clicked', $event)\">\n            <mat-icon>refresh</mat-icon>\n        </button>\n\n        <button type=\"button\" mat-icon-button matTooltip=\"Favorite\" (click)=\"log('Favorite button clicked', $event)\">\n            <mat-icon>favorite</mat-icon>\n        </button>\n    </ng-template>\n\n    <!-- Right panel -->\n    <ng-template #layoutRight>\n        <div class=\"layout-right-container\">\n            Layout right\n            <div filters-chip-list>\n                <mat-chip-listbox class=\"mat-mdc-chip-set-stacked\" aria-label=\"Color selection\">\n                    <mat-chip-option>1</mat-chip-option>\n                    <mat-chip-option>2</mat-chip-option>\n                    <mat-chip-option>3</mat-chip-option>\n                    <mat-chip-option>4</mat-chip-option>\n                    <mat-chip-option>5</mat-chip-option>\n                </mat-chip-listbox>\n            </div>\n        </div>\n    </ng-template>\n\n    <!-- Info boxes panel -->\n    <ng-template #layoutInfoBoxes>\n        <span class=\"info-box\">Info box</span>\n        <span class=\"info-box primary\">Info box primary</span>\n        <span class=\"info-box accent\">Info box accent</span>\n    </ng-template>\n\n    <div class=\"content-container\">Layout content</div>\n</ngx-layout>\n"
        }
    ],
    "modules": [],
    "miscellaneous": [],
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/storybook/src/stories/layout/layout-wrapper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorybookLayoutWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            }
        ]
    }
}
