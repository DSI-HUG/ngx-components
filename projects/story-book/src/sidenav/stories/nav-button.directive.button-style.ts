import { StoryObj } from '@storybook/angular';

import { NavButtonComponentArgs, navButtonStyleArgs } from '../args/nav-button.args';
import { navButtonStatesRender } from '../renders/nav-button.states.render';
import { navButtonStates } from './nav-button.states';

export const navButtonDirectiveButtonStyle: StoryObj<NavButtonComponentArgs> = {
    ...navButtonStates,
    parameters: {
        docs: {
            description: {
                story: `
La directive \`[navButtonStyle]\` permet de sÃ©lectionner un style dâ€™affichage spÃ©cifique pour le bouton.

#### Styles prÃ©dÃ©finis

- **\`none\`** : aucun style nâ€™est appliquÃ©. Le bouton conserve son apparence par dÃ©faut.
- **\`fill\`** : applique une couleur de fond derriÃ¨re le bouton, pour un effet visuel plus marquÃ©.

#### Personnalisation

Si vous souhaitez ajouter de nouveaux styles dâ€™affichage (par exemple, un style *outline*), câ€™est ici quâ€™il faudra les dÃ©finir.
La directive est conÃ§ue pour Ãªtre extensible et accueillir dâ€™autres variantes Ã  lâ€™avenir.

> ðŸ’¡ Utilisez \`[navButtonStyle]\` pour adapter visuellement vos \`nav-buttons\` selon les besoins de votre interface ou votre design system.
`
            }
        }
    },
    render: navButtonStatesRender({ navButtonStyle: [] }),
    ...navButtonStyleArgs
};
