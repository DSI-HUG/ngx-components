@use '@angular/material' as mat;

@mixin theme($theme) {
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);

    ngx-layout > .mat-toolbar.mat-primary {
        background-color: mat.get-color-from-palette($primary, darker);
        color: mat.get-color-from-palette($primary, darker-contrast);

        .mat-icon-button:not([disabled]) .mat-icon {
            color: mat.get-color-from-palette($primary, darker-contrast);
        }

        &:not(:first-of-type) {
            background-color: mat.get-color-from-palette($primary);
            color: mat.get-color-from-palette($primary, default-contrast);

            .mat-icon-button:not([disabled]) .mat-icon {
                color: mat.get-color-from-palette($primary, default-contrast);
            }
        }
    }

    ngx-layout {
        mat-drawer {
            &.right {
                [filters-title] {
                    color: mat.get-color-from-palette($foreground, secondary-text);
                    background-color: mat.get-color-from-palette($background, disabled-button-toggle);
                }

                [filters-subtitle] {
                    color: mat.get-color-from-palette($foreground, secondary-text);
                    background-color: mat.get-color-from-palette($background, hover);
                }

                [filters-icon] {
                    color: mat.get-color-from-palette($foreground, text);

                    &:hover {
                        color: mat.get-color-from-palette($foreground, secondary-text);
                    }
                }

                [filters-chip-list] {
                    .mat-standard-chip {
                        background-color: mat.get-color-from-palette($accent);
                        color: mat.get-color-from-palette($background, background);
                    }

                    .mat-standard-chip {
                        &:not([disabled]) {
                            &:hover {
                                background-color: mat.get-color-from-palette($accent, 700);
                                color: mat.get-color-from-palette($accent, 600);

                                &:before {
                                    color: mat.get-color-from-palette($background, background);
                                }
                            }
                        }
                    }
                }

                [filters-toggle-group] {
                    .mat-button-toggle {
                        color: mat.get-color-from-palette($foreground, secondary-text);

                        &.mat-button-toggle-checked {
                            background-color: mat.get-color-from-palette($accent);
                            color: mat.get-color-from-palette($background, background);
                        }

                        &:not(:has(button[disabled])) {
                            &:hover {
                                background-color: mat.get-color-from-palette($accent, 200);
                                color: mat.get-color-from-palette($background, background);
                            }
                        }
                    }
                }
            }
        }

        mat-button-toggle-group {
            &:not([filters-toggle-group]):not([color='accent']):not([color='primary']) {
                mat-button-toggle {
                    button {
                        .mat-button-toggle-label-content {
                            color: mat.get-color-from-palette($foreground, secondary-text);
                        }
                    }
                }
            }
        }

        mat-toolbar {
            &.actions {
                .info-boxes-container {
                    .info-box {
                        &.accent {
                            background-color: mat.get-color-from-palette($accent);
                            color: mat.get-color-from-palette($accent, default-contrast);
                        }

                        &.primary {
                            background-color: mat.get-color-from-palette($primary, 800);
                            color: mat.get-color-from-palette($primary, default-contrast);
                        }
                    }
                }
            }
        }

        // Custom scrollbar
        ::-webkit-scrollbar-track {
            background-color: mat.get-color-from-palette($background, background);
        }

        ::-webkit-scrollbar-thumb {
            background-color: mat.get-color-from-palette($foreground, hint-text);
            border: 2px solid mat.get-color-from-palette($background, background);
        }

        ::-webkit-scrollbar-thumb:hover {
            background-color: mat.get-color-from-palette($foreground, secondary-text);
        }

        .editor-toolbar-wrapper {
            background-color: mat.get-color-from-palette($background, background);
        }
    }
}
