(self.webpackChunk=self.webpackChunk||[]).push([[158],{"./projects/story-book/src/user-card/user-card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>user_card_stories,dynamicBadgeColor:()=>dynamicBadgeColor,notExpandedUserCard:()=>notExpandedUserCard,standard:()=>standard,userAbbreviationTitle:()=>userAbbreviationTitle,userWithMissingInfo:()=>userWithMissingInfo});var button_toggle=__webpack_require__("./node_modules/@angular/material/fesm2022/button-toggle.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),user_card_componentngResource=__webpack_require__("./projects/user-card/src/user-card.component.scss?ngResource"),user_card_componentngResource_default=__webpack_require__.n(user_card_componentngResource);var coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2022/coercion.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs");const greenBadgeFamily=["Médico-technique","Social","Médico-thérapeutique","Pharmacie"],blueBadgeFamily=["Soins","Infirmier-e"],redBadgeFamily=["Médecin dentiste","Médecin"];let NgxUserCardComponent=class NgxUserCardComponent{user;userCard;_expanded=!0;set expanded(value){this._expanded=(0,coercion.he)(value)}get expanded(){return this._expanded}ngOnChanges(changes){changes.user&&(this.userCard=this.buildDisplayableUserCard(this.user))}buildDisplayableUserCard(user){return{fullname:this.getFullName(user),initials:user.initials,function:this.getFunction(user).toLocaleLowerCase(),specialty:this.getSpecialty(user),badgeColor:this.getBadgeColor(user.familyCode),service:user.esoN3Label,type:user.type,phoneNumber:this.formatPhone(user.phone),mobileNumber:this.formatPhone(user.bip||user.mobile),email:user.email?.toLowerCase(),address:this.getUserAddress(user)}}getUserAddress(user){if(user.organisation||user.address||user.zipCode||user.city){let address="";return user.organisation&&(address+=`${user.organisation} <br>`),user.address&&(address+=`${user.address} <br>`),user.zipCode&&(address+=`${user.zipCode} `),user.city&&(address+=`${user.city}`),address}}getBadgeColor(familyCode){if(familyCode)return greenBadgeFamily.includes(familyCode)?"green":blueBadgeFamily.includes(familyCode)?"blue":redBadgeFamily.includes(familyCode)?"red":"grey"}getSpecialty(user){return this.isValidSpecialty(user.specialty1)||this.isValidSpecialty(user.specialty2)?[user.specialty1,user.specialty2].filter((s=>this.isValidSpecialty(s))).join(", "):user.speciality?.trim()?user.speciality:void 0}isValidSpecialty(specialty){const s=specialty?.trim();return!!s&&"-"!==s&&"null"!==s}getFunction(user){return user.groupFunctionLabel?`${user.groupFunctionLabel}`:`${user.functionSefName?user.functionSefName:""} ${user.functionSefCode?`(${user.functionSefCode})`:""} ${user.role?`/ ${user.role}`:""}`}getShortTitle(title){switch(title?.toLowerCase().trim()){case"monsieur":return"M.";case"madame":return"Mme.";case"docteur":return"Dr.";case"docteure":return"Dre.";case"professeur":return"Pr.";case"professeure":return"Pre.";default:return title||""}}getFullName(user){return`${this.getShortTitle(user.title)} ${user.firstname||""} ${user.lastname||""}`}formatPhone(rawNumber){return 10===rawNumber?.length&&rawNumber.startsWith("0")?rawNumber.replace(/^(\d{3})(\d{3})(\d{2})(\d{2})$/,"$1 $2 $3 $4"):12===rawNumber?.length&&rawNumber.startsWith("+")||13===rawNumber?.length&&rawNumber.startsWith("00")?rawNumber.replace(/^(\+|0{2})(\d{2})(\d{2})(\d{3})(\d{2})(\d{2})$/,"$1$2 $3 $4 $5 $6"):rawNumber}static propDecorators={user:[{type:core.Input}],expanded:[{type:core.Input}],ngOnChanges:[{type:core.Input}]}};NgxUserCardComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngx-user-card",template:'<div class="ngx-user-card-header">\n    @if (userCard.badgeColor; as badgeColor) {\n        <span class="header-badge" [ngClass]="badgeColor + \'-badge\'"></span>\n    }\n    <div class="header-infos">\n        <div class="header-fullname">\n            {{ userCard.fullname }}\n            @if (userCard.initials; as initials) {\n                <span class="header-initials">\n                    {{ \' - \' + initials }}\n                </span>\n            }\n        </div>\n        <div class="header-function">\n            {{ userCard.function }}{{ userCard.specialty ? \' - \' + userCard.specialty : \'\' }}\n        </div>\n    </div>\n</div>\n@if (expanded) {\n    <div class="ngx-user-card-wrapper">\n        <hr />\n        <div class="ngx-user-card-content">\n            <div class="content-service">\n                <div class="label">Service</div>\n                <div class="value">{{ userCard.service ?? \'-\' }}</div>\n            </div>\n            <div class="content-type">\n                <div class="label">Type</div>\n                <div class="value">{{ userCard.type ?? \'-\' }}</div>\n            </div>\n            <div class="content-phone">\n                <div class="label">Téléphone</div>\n                <div class="value">{{ userCard.phoneNumber ?? \'-\' }}</div>\n            </div>\n            <div class="content-mobile">\n                <div class="label">Mobile</div>\n                <div class="value">{{ userCard.mobileNumber ?? \'-\' }}</div>\n            </div>\n            <div class="content-email">\n                <div class="label">Email</div>\n                <div class="value">{{ userCard.email ?? \'-\' }}</div>\n            </div>\n            <div class="content-address">\n                <div class="label">Adresse</div>\n                <div class="value" [innerHTML]="userCard.address ?? \'-\'"></div>\n            </div>\n        </div>\n    </div>\n}\n',changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.None,standalone:!0,imports:[common.NgClass,icon.An],styles:[user_card_componentngResource_default()]})],NgxUserCardComponent);const user_card_stories={title:"Components/User Card",component:NgxUserCardComponent,tags:["autodocs"],decorators:[(0,dist.moduleMetadata)({imports:[button_toggle.Vg]})],parameters:{layout:"centered",docs:{description:{component:"The `NgxUserCardComponent` displays user information. The UserCard can be expanded or compressed, showing or hiding additional details based on the `expanded` input."}}},argTypes:{expanded:{control:"boolean",table:{defaultValue:{summary:"true"},type:{summary:"boolean"}},description:"Set to false to have a compressed UserCard with less information."},user:{control:"object",table:{type:{summary:"NgxUserCard"}},description:"User information object for displaying in the card."}},args:{user:{title:"Docteur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Infirmier-e",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"},expanded:!1}},standard={args:{expanded:!0}},notExpandedUserCard={parameters:{docs:{description:{story:'You can set the "expanded" property to false to have a compressed UserCard with less information.'}}}},dynamicBadgeColor={parameters:{docs:{description:{story:'Depending on the user\'s "familyCode" property given, the UserCard can have a green, blue, red or gray colored badge.<br /><ul><li>Green : <code>Médico-technique</code>, <code>Social</code>, <code>Médico-thérapeutique</code>, <code>Pharmacie</code></li><li>Blue : <code>Soins</code>, <code>Infirmier-e</code></li><li>Red : <code>Médecin dentiste</code>, <code>Médecin</code></li><li>Gray : Any other text</li><li>Nothing : Empty familyCode</li></ul>'}}},render:args=>({props:{...args,familyCodeChanged(code){this.user={title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:code,functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},template:'\n        <section>\n          <ngx-user-card [user]="user" [expanded]="false"></ngx-user-card>\n          <br />\n          <div class="matButtonContainer">\n            <mat-button-toggle-group name="favoriteColor" hideSingleSelectionIndicator="true" (change)="familyCodeChanged($event.value)" [value]="user.familyCode">\n                <mat-button-toggle value="Social">Social</mat-button-toggle>\n                <mat-button-toggle value="Infirmier-e">Infirmier-e</mat-button-toggle>\n                <mat-button-toggle value="Médecin dentiste">Médecin dentiste</mat-button-toggle>\n                <mat-button-toggle value="a text">Custom text</mat-button-toggle>\n                <mat-button-toggle value="">Empty</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      '}),args:{user:{title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Social",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},userAbbreviationTitle={parameters:{docs:{description:{story:'Depending on the user\'s "title" property given, the UserCard will display its abbreviation.<br /><ul><li>Docteur / Docteure : <code>Dr</code>, <code>Dre</code></li><li>Monsieur / Madame : <code>M</code>, <code>Mme</code></li><li>Professeur / Professeure : <code>Pr</code>, <code>Pre</code></li></ul>Any other text in the "title" property will be displayed entirely.'}}},render:args=>({props:{...args,titleChanged(code){this.user={title:code,firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Soins",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},template:'\n        <section>\n          <ngx-user-card [user]="user" [expanded]="false"></ngx-user-card>\n          <br />\n          <div class="matButtonContainer">\n            <mat-button-toggle-group name="title" hideSingleSelectionIndicator="true" (change)="titleChanged($event.value)" [value]="user.title">\n                <mat-button-toggle value="Docteur">Docteur</mat-button-toggle>\n                <mat-button-toggle value="Docteure">Docteure</mat-button-toggle>\n                <mat-button-toggle value="Monsieur">Monsieur</mat-button-toggle>\n                <mat-button-toggle value="Madame">Madame</mat-button-toggle>\n                <mat-button-toggle value="Professeur">Professeur</mat-button-toggle>\n                <mat-button-toggle value="Professeure">Professeure</mat-button-toggle>\n                <mat-button-toggle value="OtherTitle">OtherTitle</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      '}),args:{user:{title:"Professeur",firstname:"Jean",lastname:"PATATE",initials:"jpat",type:"Type",email:"jean.patate@hug.ch",role:"Medecin",groupFunctionLabel:"Group",familyCode:"Infirmier-e",functionSefName:"SefNameFunction",functionSefCode:"SefCodeFunction",organisation:"HUG",speciality:"Neurochirurgie",specialty1:"Dermatologie",specialty2:"Pedicure",esoN3Label:"EsoN3Label",login:"PatateLogin",phone:"+44 150 509 39",bip:"8859595",mobile:"+44 150 509 39",address:"Carouge, 7 Rue St Julien",city:"Carouge",zipCode:"1227"}}},userWithMissingInfo={parameters:{docs:{description:{story:"Displays the component when certain user information is missing. This helps ensure that the rendering remains consistent even with incomplete data."}}},args:{user:{title:"Professor",firstname:"Jean",lastname:"PATATE",initials:"jpat",email:"jean.patate@hug.ch"},expanded:!0}},__namedExportsOrder=["standard","notExpandedUserCard","dynamicBadgeColor","userAbbreviationTitle","userWithMissingInfo"];standard.parameters={...standard.parameters,docs:{...standard.parameters?.docs,source:{originalSource:"{\n  args: {\n    expanded: true\n  }\n}",...standard.parameters?.docs?.source}}},notExpandedUserCard.parameters={...notExpandedUserCard.parameters,docs:{...notExpandedUserCard.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'You can set the \"expanded\" property to false to have a compressed UserCard with less information.'\n      }\n    }\n  }\n}",...notExpandedUserCard.parameters?.docs?.source}}},dynamicBadgeColor.parameters={...dynamicBadgeColor.parameters,docs:{...dynamicBadgeColor.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Depending on the user\\'s \"familyCode\" property given, the UserCard can have a green, blue, red or gray colored badge.<br /><ul><li>Green : <code>Médico-technique</code>, <code>Social</code>, <code>Médico-thérapeutique</code>, <code>Pharmacie</code></li><li>Blue : <code>Soins</code>, <code>Infirmier-e</code></li><li>Red : <code>Médecin dentiste</code>, <code>Médecin</code></li><li>Gray : Any other text</li><li>Nothing : Empty familyCode</li></ul>'\n      }\n    }\n  },\n  render: args => ({\n    props: {\n      ...args,\n      familyCodeChanged(code: string): void {\n        this['user'] = {\n          title: 'Professeur',\n          firstname: 'Jean',\n          lastname: 'PATATE',\n          initials: 'jpat',\n          type: 'Type',\n          email: 'jean.patate@hug.ch',\n          role: 'Medecin',\n          groupFunctionLabel: 'Group',\n          familyCode: code,\n          functionSefName: 'SefNameFunction',\n          functionSefCode: 'SefCodeFunction',\n          organisation: 'HUG',\n          speciality: 'Neurochirurgie',\n          specialty1: 'Dermatologie',\n          specialty2: 'Pedicure',\n          esoN3Label: 'EsoN3Label',\n          login: 'PatateLogin',\n          phone: '+44 150 509 39',\n          bip: '8859595',\n          mobile: '+44 150 509 39',\n          address: 'Carouge, 7 Rue St Julien',\n          city: 'Carouge',\n          zipCode: '1227'\n        };\n      }\n    },\n    template: `\n        <section>\n          <ngx-user-card [user]=\"user\" [expanded]=\"false\"></ngx-user-card>\n          <br />\n          <div class=\"matButtonContainer\">\n            <mat-button-toggle-group name=\"favoriteColor\" hideSingleSelectionIndicator=\"true\" (change)=\"familyCodeChanged($event.value)\" [value]=\"user.familyCode\">\n                <mat-button-toggle value=\"Social\">Social</mat-button-toggle>\n                <mat-button-toggle value=\"Infirmier-e\">Infirmier-e</mat-button-toggle>\n                <mat-button-toggle value=\"Médecin dentiste\">Médecin dentiste</mat-button-toggle>\n                <mat-button-toggle value=\"a text\">Custom text</mat-button-toggle>\n                <mat-button-toggle value=\"\">Empty</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      `\n  }),\n  args: {\n    user: {\n      title: 'Professeur',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      type: 'Type',\n      email: 'jean.patate@hug.ch',\n      role: 'Medecin',\n      groupFunctionLabel: 'Group',\n      familyCode: 'Social',\n      functionSefName: 'SefNameFunction',\n      functionSefCode: 'SefCodeFunction',\n      organisation: 'HUG',\n      speciality: 'Neurochirurgie',\n      specialty1: 'Dermatologie',\n      specialty2: 'Pedicure',\n      esoN3Label: 'EsoN3Label',\n      login: 'PatateLogin',\n      phone: '+44 150 509 39',\n      bip: '8859595',\n      mobile: '+44 150 509 39',\n      address: 'Carouge, 7 Rue St Julien',\n      city: 'Carouge',\n      zipCode: '1227'\n    }\n  }\n}",...dynamicBadgeColor.parameters?.docs?.source}}},userAbbreviationTitle.parameters={...userAbbreviationTitle.parameters,docs:{...userAbbreviationTitle.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Depending on the user\\'s \"title\" property given, the UserCard will display its abbreviation.<br /><ul><li>Docteur / Docteure : <code>Dr</code>, <code>Dre</code></li><li>Monsieur / Madame : <code>M</code>, <code>Mme</code></li><li>Professeur / Professeure : <code>Pr</code>, <code>Pre</code></li></ul>Any other text in the \"title\" property will be displayed entirely.'\n      }\n    }\n  },\n  render: args => ({\n    props: {\n      ...args,\n      titleChanged(code: string): void {\n        this['user'] = {\n          title: code,\n          firstname: 'Jean',\n          lastname: 'PATATE',\n          initials: 'jpat',\n          type: 'Type',\n          email: 'jean.patate@hug.ch',\n          role: 'Medecin',\n          groupFunctionLabel: 'Group',\n          familyCode: 'Soins',\n          functionSefName: 'SefNameFunction',\n          functionSefCode: 'SefCodeFunction',\n          organisation: 'HUG',\n          speciality: 'Neurochirurgie',\n          specialty1: 'Dermatologie',\n          specialty2: 'Pedicure',\n          esoN3Label: 'EsoN3Label',\n          login: 'PatateLogin',\n          phone: '+44 150 509 39',\n          bip: '8859595',\n          mobile: '+44 150 509 39',\n          address: 'Carouge, 7 Rue St Julien',\n          city: 'Carouge',\n          zipCode: '1227'\n        };\n      }\n    },\n    template: `\n        <section>\n          <ngx-user-card [user]=\"user\" [expanded]=\"false\"></ngx-user-card>\n          <br />\n          <div class=\"matButtonContainer\">\n            <mat-button-toggle-group name=\"title\" hideSingleSelectionIndicator=\"true\" (change)=\"titleChanged($event.value)\" [value]=\"user.title\">\n                <mat-button-toggle value=\"Docteur\">Docteur</mat-button-toggle>\n                <mat-button-toggle value=\"Docteure\">Docteure</mat-button-toggle>\n                <mat-button-toggle value=\"Monsieur\">Monsieur</mat-button-toggle>\n                <mat-button-toggle value=\"Madame\">Madame</mat-button-toggle>\n                <mat-button-toggle value=\"Professeur\">Professeur</mat-button-toggle>\n                <mat-button-toggle value=\"Professeure\">Professeure</mat-button-toggle>\n                <mat-button-toggle value=\"OtherTitle\">OtherTitle</mat-button-toggle>\n            </mat-button-toggle-group>\n          </div>\n        </section>\n      `\n  }),\n  args: {\n    user: {\n      title: 'Professeur',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      type: 'Type',\n      email: 'jean.patate@hug.ch',\n      role: 'Medecin',\n      groupFunctionLabel: 'Group',\n      familyCode: 'Infirmier-e',\n      functionSefName: 'SefNameFunction',\n      functionSefCode: 'SefCodeFunction',\n      organisation: 'HUG',\n      speciality: 'Neurochirurgie',\n      specialty1: 'Dermatologie',\n      specialty2: 'Pedicure',\n      esoN3Label: 'EsoN3Label',\n      login: 'PatateLogin',\n      phone: '+44 150 509 39',\n      bip: '8859595',\n      mobile: '+44 150 509 39',\n      address: 'Carouge, 7 Rue St Julien',\n      city: 'Carouge',\n      zipCode: '1227'\n    }\n  }\n}",...userAbbreviationTitle.parameters?.docs?.source}}},userWithMissingInfo.parameters={...userWithMissingInfo.parameters,docs:{...userWithMissingInfo.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays the component when certain user information is missing. This helps ensure that the rendering remains consistent even with incomplete data.'\n      }\n    }\n  },\n  args: {\n    user: {\n      title: 'Professor',\n      firstname: 'Jean',\n      lastname: 'PATATE',\n      initials: 'jpat',\n      email: 'jean.patate@hug.ch'\n      // Phone number and address are missing\n    },\n    expanded: true\n  }\n}",...userWithMissingInfo.parameters?.docs?.source}}}},"./projects/user-card/src/user-card.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'ngx-user-card {\n  display: block;\n  font-family: "Roboto";\n  border-radius: 8px;\n  width: 350px;\n  padding: 1rem;\n  word-break: break-word;\n}\nngx-user-card > .ngx-user-card-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 400;\n}\nngx-user-card > .ngx-user-card-header.expandable {\n  cursor: pointer;\n}\nngx-user-card > .ngx-user-card-header > .header-badge {\n  display: flex;\n  flex: 0 0 auto;\n  width: 16px;\n  height: 16px;\n  margin: 10px;\n  border-radius: 12px;\n}\nngx-user-card > .ngx-user-card-header > .header-infos {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-fullname {\n  display: flex;\n  align-items: baseline;\n  font-weight: 600;\n  font-size: 1rem;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-fullname > .header-initials {\n  font-size: 12px;\n  margin-left: 5px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-function {\n  font-size: 14px;\n}\nngx-user-card > .ngx-user-card-header > .header-infos > .header-function::first-letter {\n  text-transform: uppercase;\n}\nngx-user-card > .ngx-user-card-header > .header-icon {\n  display: flex;\n  transition: rotate 300ms ease-in-out;\n}\nngx-user-card > .ngx-user-card-header > .header-icon.expanded {\n  rotate: -180deg;\n}\nngx-user-card > .ngx-user-card-wrapper {\n  overflow: hidden;\n}\nngx-user-card hr {\n  border-bottom: 1px;\n  margin: 1rem 0;\n}\nngx-user-card .ngx-user-card-content {\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-template-rows: auto;\n  grid-template-areas: "service type" "phone mobile" "email email" "address address";\n  row-gap: 12px;\n  column-gap: 0.5rem;\n}\nngx-user-card .ngx-user-card-content .label {\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 14px;\n}\nngx-user-card .ngx-user-card-content .value {\n  line-height: 20px;\n}\nngx-user-card .ngx-user-card-content > .content-type {\n  grid-area: type;\n}\nngx-user-card .ngx-user-card-content > .content-service {\n  grid-area: service;\n}\nngx-user-card .ngx-user-card-content > .content-phone {\n  grid-area: phone;\n}\nngx-user-card .ngx-user-card-content > .content-mobile {\n  grid-area: mobile;\n}\nngx-user-card .ngx-user-card-content > .content-email {\n  grid-area: email;\n}\nngx-user-card .ngx-user-card-content > .content-address {\n  grid-area: address;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);